{
  // Colour scheme used in jsbin. Values can be:
  // - 'dark' (based on Atom One Dark)
  // - 'light' (based on Devtools light)
  "app.theme": "dark",
  // Switches the view from columns to rows with result at the bottom
  "app.splitColumns": true,
  // Automatically upload settings to your account (requires PRO)
  "app.syncSettings": false,
  // Where to save on ctrl + S. Values can be: 'local', 'github', 'jsbin'
  "app.defaultSave": "local",
  // Default source panel. Values can be: 'html', 'css' and 'javascript'
  "app.source": "html",
  // Prevent the following keys from being taken over, allowing browser to
  // maintain it's default behaviour
  "app.protectedKeys": ["Ctrl-L", "Ctrl-T", "Ctrl-W", "Ctrl-J", "Ctrl-R"],
  // Default result panel. Values can be: 'page', 'console', 'both' and 'none'
  "app.result": "page",
  // Automatically run JavaScript in real-time. If set to "false", JavaScript
  // can be executed by using ctrl + enter
  "javascript.autoRun": true,
  // Font size in pixels
  "editor.fontSize": 13,
  // The font family for the editor
  "editor.fontFamily": "'SourceCodePro-Regular', menlo, monaco, Consolas, Lucida Console, monospace",
  // Whether to show line numbers to the left of the editor
  "editor.lineNumbers": true,
  // Controls line wrapping, using a soft wrap at the editor viewport
  "editor.lineWrapping": false,
  // Whether to automatically add closing bracket when you open them
  "editor.autoCloseBrackets": true,
  // Indent lines with tabs (or spaces)
  "editor.indentWithTabs": false,
  // The width of a tab
  "editor.tabSize": 2,
  // How many spaces a block should be indented.
  "editor.indentUnit": 2,
  // Whether to use the context-sensitive indentation that the mode provides
  // (or just indent the same as the line before). If you find the editor
  // is mixing tabs and spaces, set this to 'false'
  "editor.smartIndent": true,
  // Determines whether the gutter scrolls along with the content horizontally
  // (false) or whether it stays fixed during horizontal scrolling
  "editor.fixedGutter": true,
  // Configures the key map to use. Values can be:
  // - 'default' (standard CodeMirror keybindings)
  // - 'sublime' (based on sublime, includes ctrl+d for multiple cursors)
  // - 'vim'
  // - 'emacs'
  "editor.keyMap": "default",
  // Configure custom key handling in CodeMirror to trigger commands. The
  // 'snippets' command will use your custom snippets defined using
  // 'snippets.javascript' etc.
  // Examples of names defined here are Enter, F5, and Q. These can be prefixed
  // with Shift-, Cmd-, Ctrl-, and Alt- to specify a modifier. So for example,
  // Shift-Ctrl-Space would be a valid key identifier.
  // Links:
  // - keymaps: https://codemirror.net/doc/manual.html#keymaps
  // - details: https://codemirror.net/doc/manual.html#option_extraKeys
  "editor.extraKeys": {
    "Tab": "snippets",
    "Esc": "dismiss"
  },
  // Custom snippets that expand on tab press. Use $0 for the position
  // to insert the cursor after the snippet is inserted.
  "snippets.javascript": {
    "cl": "console.log($0);"
  },
  "snippets.css": {},
  "snippets.html": {}
}